<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">

    <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>

    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>
     
    <bean id="dataSource" class="org.springframework.jdbc.datasource.SingleConnectionDataSource" lazy-init="true">
        <property name="driverClassName" value="org.h2.Driver" />
        <property name="url" value="jdbc:h2:mem:test;DB_CLOSE_ON_EXIT=false" />
        <property name="username" value="sa" />
        <property name="password">
            <value></value>
        </property>
        <property name="autoCommit" value="false" />
        <property name="suppressClose" value="true" />
    </bean>

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <!-- <property name="persistenceUnitManager" ref="persistenceUnitManager"/> -->
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="showSql" value="true" />
                <property name="generateDdl" value="true" />
                <property name="databasePlatform" value="org.hibernate.dialect.H2Dialect" />
            </bean>
        </property>
        <property name="persistenceXmlLocation" value="persistence.xml" />
        <property name="persistenceUnitName" value="TOUK-WSHT-PU"/>
        <!-- 
            <property name="loadTimeWeaver"> <bean class="org.springframework.instrument.classloading.SimpleLoadTimeWeaver"/> </property> 
        -->
    </bean>

<!-- 
    <bean id="persistenceUnitManager" class="org.springframework.orm.jpa.persistenceunit.DefaultPersistenceUnitManager">
        <property name="defaultDataSource" ref="dataSource" />
        <property name=""></property>
    </bean>
 -->
 
    <!--
        <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"> <property name="jpaVendorAdapter"> <bean
        class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"> <property name="showSql" value="true" /> <property name="generateDdl" value="true"
        /> <property name="databasePlatform" value="org.hibernate.dialect.H2Dialect" /> </bean> </property> </bean> <bean id="hibernateSessionFactory"
        class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean"> <property name="dataSource" ref="dataSource" /> <property
        name="hibernateProperties"> <props> <prop key="hibernate.dialect">org.hibernate.dialect.H2Dialect</prop> <prop key="show_sql">true</prop> <prop
        key="hibernate.hbm2ddl.auto">create-drop</prop> </props> </property> <property name="annotatedPackages"> <list> <value>pl.touk.humantask.model</value>
        </list> </property> <property name="annotatedClasses"> <list> <value>pl.touk.humantask.model.Deadline</value>
        <value>pl.touk.humantask.model.Task</value> <value>pl.touk.humantask.model.Assignee</value> <value>pl.touk.humantask.model.Person</value>
        <value>pl.touk.humantask.model.Group</value> <value>pl.touk.humantask.model.Attachment</value> <value>pl.touk.humantask.model.Comment</value> </list>
        </property> </bean> <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager"> <property
        name="sessionFactory" ref="hibernateSessionFactory" /> </bean>
    -->

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <tx:annotation-driven />

    <!--
        <bean id="taskDao" class="pl.touk.humantask.dao.impl.HibernateTaskDao"> <property name="sessionFactory" ref="hibernateSessionFactory" /> </bean> <bean
        id="assigneeDao" class="pl.touk.humantask.dao.impl.HibernateAssigneeDao"> <property name="sessionFactory" ref="hibernateSessionFactory" /> </bean>
    -->
    <bean id="taskDao" class="pl.touk.humantask.dao.impl.JpaTaskDao">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>

    <bean id="assigneeDao" class="pl.touk.humantask.dao.impl.JpaAssigneeDao">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>

    <!-- 
        Business configuration 
    -->

    <bean name="peopleQuery" class="pl.touk.humantask.PropertyBasedPeopleQuery">
        <property name="configuration" value="classpath:peopleGroups.properties" />
        <property name="assigneeDao" ref="assigneeDao" />
    </bean>

    <bean id="humanInteractions" class="pl.touk.humantask.spec.HumanInteractionsFactoryBean">
        <property name="htdXml" value="classpath:htd1.xml" />
    </bean>

    <bean id="ApproveClaimTask" class="pl.touk.humantask.spec.TaskDefinition">
        <property name="name" value="ApproveClaim" />
        <property name="definition" ref="humanInteractions" />
        <property name="instantiable" value="true" />
    </bean>

    <bean id="ApproveClaimTask2" class="pl.touk.humantask.spec.TaskDefinition">
        <property name="name" value="ApproveClaim2" />
        <property name="definition" ref="humanInteractions" />
        <property name="instantiable" value="true" />
    </bean>

    <bean id="taskManager" class="pl.touk.humantask.spec.TaskDefinitionManagerImpl">
        <constructor-arg type="org.springframework.core.io.Resource" value="classpath:htd1.xml"/>
    </bean>    
    
	<bean id="humanTaskServices" class="pl.touk.humantask.Services">
		<property name="taskDao" ref="taskDao" />
		<property name="assigneeDao" ref="assigneeDao" />
		<property name="peopleQuery" ref="peopleQuery"/>
		<property name="taskDefinitions">
			<list>
				<ref bean="ApproveClaimTask" />
				<ref bean="ApproveClaimTask2" />
			</list>
		</property>
	</bean>


</beans>